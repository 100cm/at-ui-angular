import { OnInit, EventEmitter, Renderer2, ChangeDetectorRef } from '@angular/core';
import { Observable } from "rxjs/Observable";
import { Subscription } from "rxjs/Subscription";
import { ConnectionPositionPair } from "../core/overlay/position/connected-position";
export declare class DropdownComponent implements OnInit {
    private _renderer;
    protected _changeDetector: ChangeDetectorRef;
    hasFilterButton: boolean;
    _triggerWidth: number;
    _placement: string;
    _dropDownPosition: 'top' | 'bottom';
    _positions: ConnectionPositionPair[];
    _subscription: Subscription;
    _nzMenu: any;
    _nzOrigin: any;
    trigger: 'click' | 'hover';
    autoClose: boolean;
    atVisible: boolean;
    dropDownChange: EventEmitter<boolean>;
    custom_content: boolean;
    placement: string;
    _onClickEvent(): void;
    _onMouseEnterEvent(e: any): void;
    _onMouseLeaveEvent(e: any): void;
    _hide(): void;
    _show(): void;
    _onPositionChange(position: any): void;
    _clickDropDown($event: any): void;
    _setTriggerWidth(): void;
    _onVisibleChange: (visible: boolean) => void;
    _startSubscribe(observable$: Observable<boolean>): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    readonly _hasBackdrop: boolean;
    constructor(_renderer: Renderer2, _changeDetector: ChangeDetectorRef);
}
