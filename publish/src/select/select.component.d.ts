import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { OptionComponent } from "./option/option.component";
export declare class SelectComponent implements OnInit {
    _dropdown: boolean;
    top: string;
    _value: any;
    _searchText: string;
    timeout: any;
    showLabel: boolean;
    options: Array<OptionComponent>;
    private _selectedLabel;
    private _searchable;
    private _allowClear;
    private _atSize;
    private _multiple;
    private _disabled;
    private _hover;
    private _tagAble;
    private _filterOptions;
    searchable: boolean;
    filterOptions: Array<any>;
    updateFilterOption(setText?: boolean): void;
    change: EventEmitter<any>;
    tagAble: boolean;
    allowClear: boolean;
    hover: boolean;
    disabled: boolean;
    atSize: "small" | "large" | "normal";
    multiple: boolean;
    readonly selectedLabel: any;
    addOption(option: OptionComponent): void;
    constructor();
    ngOnInit(): void;
    selection: any;
    tagInput: any;
    searchInput: ElementRef;
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    handleDrop(e: any): void;
    dropUp(): void;
    dropDown(): void;
    readonly selectedOptions: OptionComponent[];
    onChange: any;
    onTouched: any;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    selectOption(e: any, option: OptionComponent, isUserClick?: boolean): void;
    /** cancel select multiple option */
    unSelectMultipleOption: (option: any, $event?: any, emitChange?: boolean) => void;
    /** select multiple option */
    selectMultipleOption(option: any, $event?: any): void;
    isInSet(set: any, option: any): OptionComponent;
    updateValue(value: any, emitChange?: boolean): void;
    _selectedOption: OptionComponent;
    _selectedOptions: Set<OptionComponent>;
    updateSelectedOption(currentModelValue: any, triggerByNgModel?: boolean): void;
    clearAllSelectedOption(): void;
    clearData(e: any): void;
    rejectData(e: any, data: any): void;
    onKey($event: any): void;
    forceUpdateSelectedOption(value: any): void;
    updateTop(): void;
    resetOption(): void;
}
